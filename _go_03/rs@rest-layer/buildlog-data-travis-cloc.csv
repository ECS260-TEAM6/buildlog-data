tr_build_id,tr_job_id,tr_build_number,tr_original_commit,tr_log_lan,tr_log_status,tr_log_setup_time,tr_log_analyzer,tr_log_frameworks,tr_log_bool_tests_ran,tr_log_bool_tests_failed,tr_log_num_tests_ok,tr_log_num_tests_failed,tr_log_num_tests_run,tr_log_num_tests_skipped,tr_log_num_test_suites_run,tr_log_num_test_suites_ok,tr_log_num_test_suites_failed,tr_log_tests_failed,tr_log_testduration,tr_log_buildduration,loc
113061770,113061771,100,e61475ff9703561be9d1a392d311f560efcc8019,go,broken,0,go,gotest,true,true,198,4,202,0,3,0,3,TestNewIndex#TestNewIndex#TestNewIndex#github.com/rs/rest-layer/resource,0.03,,5634
75645348,75645351,34,af40ec30d19a7b8034c2ddb6e89ce7d0054bb2b4,go,ok,0,go,gotest,true,false,47,0,47,0,4,4,0,,0.0,,3932
502460399,502460401,775,3155f2ee5bb99e47cb815c0991eafeeedd2d7eb3,go,broken,1,go,gotest,true,true,1981,389,2370,0,5,-382,387,TestFloatQueryValidator#TestFloatQueryValidator/Float.ValidateQuery(int)#TestFloatQueryValidator/Float.ValidateQuery(string)#TestFloatParse#TestFloatParse/Float.parse(string)#TestFloatParse/Float.parse(int)#TestFloatGet#TestFloatGet/Float.get(int)#TestFloatGet/Float.get(string)#TestIntegerQueryValidator#TestIntegerQueryValidator/Integer.ValidateQuery(string)#TestIntegerQueryValidator/Integer.ValidateQuery(float64)#TestIntegerParse#TestIntegerParse/Integer.parse(1.1)#TestIntegerParse/Integer.parse(string)#TestIntegerGet#TestIntegerGet/Integer.get(float64)#TestStringQueryValidator#TestStringQueryValidator/String.ValidateQuery(int)#TestTimeParse#TestTimeParse/Time.parse(string)-invalid#TestTimeGet#TestTimeGet/Time.get(RFC3339-string)#TestTimeGet/Time.get(string)#TestFloatQueryValidator#TestFloatQueryValidator/Float.ValidateQuery(string)#TestFloatQueryValidator/Float.ValidateQuery(int)#TestFloatParse#TestFloatParse/Float.parse(int)#TestFloatParse/Float.parse(string)#TestFloatGet#TestFloatGet/Float.get(int)#TestFloatGet/Float.get(string)#TestIntegerQueryValidator#TestIntegerQueryValidator/Integer.ValidateQuery(float64)#TestIntegerQueryValidator/Integer.ValidateQuery(string)#TestIntegerParse#TestIntegerParse/Integer.parse(1.1)#TestIntegerParse/Integer.parse(string)#TestIntegerGet#TestIntegerGet/Integer.get(float64)#TestStringQueryValidator#TestStringQueryValidator/String.ValidateQuery(int)#TestTimeParse#TestTimeParse/Time.parse(string)-invalid#TestTimeGet#TestTimeGet/Time.get(string)#TestTimeGet/Time.get(RFC3339-string)#TestFloatQueryValidator#TestFloatQueryValidator/Float.ValidateQuery(string)#TestFloatQueryValidator/Float.ValidateQuery(int)#TestFloatParse#TestFloatParse/Float.parse(int)#TestFloatParse/Float.parse(string)#TestFloatGet#TestFloatGet/Float.get(int)#TestFloatGet/Float.get(string)#TestIntegerQueryValidator#TestIntegerQueryValidator/Integer.ValidateQuery(float64)#TestIntegerQueryValidator/Integer.ValidateQuery(string)#TestIntegerParse#TestIntegerParse/Integer.parse(1.1)#TestIntegerParse/Integer.parse(string)#TestIntegerGet#TestIntegerGet/Integer.get(float64)#TestStringQueryValidator#TestStringQueryValidator/String.ValidateQuery(int)#TestTimeParse#TestTimeParse/Time.parse(string)-invalid#TestTimeGet#TestTimeGet/Time.get(RFC3339-string)#TestTimeGet/Time.get(string)#github.com/rs/rest-layer/schema#TestParse#TestParse/{"$regex":"someregexpression"}#TestParse/{"$in":[1,2]}#TestParse/{"$elemMatch":"someregexpression"}#TestParse/{"$exists":true}#TestParse/{"$ne":"bar"}#TestParse/{"$gt":1}#TestParse/{"foo":{"$elemMatch":null}}#TestParse/{"foo":{"$elemMatch":"two"}}#TestParse/{"foo":{"$elemMatch":[{"bar":"one","baz":"two"}]}}#TestParse/{"foo":{"$regex":"b[a-z)r"}}#TestParse/{"foo":{"$regex":"b(?=a)r"}}#TestParse/{"foo":{"$regex":"b[..?r"}}#TestParse/{"$and":["foo","bar"]}#TestParse/{"$and":"foo"}#TestParse/{"$or":[{"foo":"bar"}]}#TestParse/{"$and":[{"foo":"bar"}]}#TestParse/{"$or":[]}#TestParse/{"$or":["foo","bar"]}#TestParse/{"$or":"foo"}#TestParse/{"bar":{"$in":"bar"}}#TestParse/{"$or":[{"foo":"bar"}}#TestParse/{"bar":{"$in":[bar]}}#TestParse/{"bar":{"$in":{"bar":"1"}}}#TestParse/{"bar":{"$gt":1ee0}}#TestParse/{"foo":{"$ne":{"bar":"baz"]}}#TestParse/{"bar":{"$in":["bar":"1"]}}#TestParse/{"foo":{"$ne":{"bar":baz}}}#TestParse/{"foo":nul#TestParse/{"foo":{"$ne":{"bar","baz"}}}#TestParse/{"foo":{"$regex":"#TestParse/{"foo":{"$ne":"#TestParse/{"foo":{"$exists#TestParse/{"foo":{"$gt":1#TestParse/{"foo":"#TestParse/{"foo":{"$ne":"bar"#TestParse/{"foo":{"$regex":"."#TestParse/{"foo":{"$in":[]#TestParse/{"foo":{"$exists":true#TestParse/[]#TestParse/{foo:"bar"}garbage#TestParse/{foo:"bar",}#TestParse/{"foo":{"$exists":1}}#TestParse/{foo,"bar"#TestParse/{foo:bar}#TestParse/{foo:"bar"#TestParse/{#TestPrepare#TestPrepareErrors#TestProjectionEval#TestProjectionEval/Parmeters/InvalidParam#TestProjectionEval/InvalidPayload#TestProjectionEval/Star/Expand-invalid#TestProjectionEval/Star/Double#TestProjectionEval/Reference/Expand-double#TestParseProjection#TestParseProjection/fo*#TestParseProjection/foo{bar,baz#TestParseProjection/bar{baz}:foo#TestParseProjection/foo:{bar}#TestParseProjection/foo{}#TestParseProjection/{foo}#TestParseProjection/,foo#TestParseProjection/f_oo#TestParseProjection/foo}#TestParseProjection/foo()#TestParseProjection/foo(bar_baz)#TestParseProjection/foo(bar#TestParseProjection/foo(bar:"baz)#TestParseProjection/foo(bar:0a)#TestParseProjection/foo(bar:@toto)#TestParseProjection/foo,#TestParseProjection/foo{bar,}#TestParseProjection/0(0:#TestParseProjection/0(0:0#TestParseProjection/0{0(0:#TestParseProjection/0{0(0:0#TestParseProjection/o(r:0.0000000000#TestProjectionValidate#TestProjectionValidate/array{foo}#TestProjectionValidate/foo#TestProjectionValidate/simple{child}#TestProjectionValidate/parent{foo}#TestProjectionValidate/simple(foo:1)#TestProjectionValidate/with_params(baz:1)#TestProjectionValidate/with_params(foo:"a_string")#TestProjectionValidate/with_params(foo:3.14)#TestProjectionValidate/with_params(bar:1)#TestProjectionValidate/with_params(foobar:true)#TestProjectionValidate/z:*#TestProjectionValidate/simple{*}#TestProjectionValidate/parent{foo}#01#TestProjectionValidate/*,parent{z:*}#TestProjectionValidate/*,parent{child{*}}#TestProjectionValidate/connection{foo}#TestParseSort#TestParseSort/foo,#TestParseSort/,foo#TestParseSort/,,#TestParseSort/___,___,#TestParseSort/-#TestParseSort/-_#TestSortValidate#TestSortValidate/foo#TestSortValidate/baz#TestParse#TestParse/{"$elemMatch":"someregexpression"}#TestParse/{"$in":[1,2]}#TestParse/{"$gt":1}#TestParse/{"$regex":"someregexpression"}#TestParse/{"$ne":"bar"}#TestParse/{"foo":{"$elemMatch":null}}#TestParse/{"foo":{"$elemMatch":[{"bar":"one","baz":"two"}]}}#TestParse/{"foo":{"$elemMatch":"two"}}#TestParse/{"$exists":true}#TestParse/{"foo":{"$regex":"b(?=a)r"}}#TestParse/{"foo":{"$regex":"b[..?r"}}#TestParse/{"foo":{"$regex":"b[a-z)r"}}#TestParse/{"$and":["foo","bar"]}#TestParse/{"$and":"foo"}#TestParse/{"$and":[{"foo":"bar"}]}#TestParse/{"$or":[{"foo":"bar"}}#TestParse/{"$or":[{"foo":"bar"}]}#TestParse/{"$or":["foo","bar"]}#TestParse/{"bar":{"$in":"bar"}}#TestParse/{"$or":"foo"}#TestParse/{"bar":{"$in":["bar":"1"]}}#TestParse/{"bar":{"$in":[bar]}}#TestParse/{"bar":{"$in":{"bar":"1"}}}#TestParse/{"bar":{"$gt":1ee0}}#TestParse/{"foo":{"$ne":{"bar":"baz"]}}#TestParse/{"foo":{"$ne":{"bar":baz}}}#TestParse/{"foo":{"$ne":{"bar","baz"}}}#TestParse/{"foo":"#TestParse/{"foo":nul#TestParse/{"foo":{"$regex":"#TestParse/{"foo":{"$exists#TestParse/{"foo":{"$gt":1#TestParse/{"foo":{"$regex":"."#TestParse/{"foo":{"$ne":"#TestParse/{"foo":{"$ne":"bar"#TestParse/{"foo":{"$exists":true#TestParse/{"foo":{"$exists":1}}#TestParse/{"$or":[]}#TestParse/{foo:"bar"}garbage#TestParse/[]#TestParse/{foo,"bar"#TestParse/{foo:"bar"#TestParse/{foo:bar}#TestParse/{foo:"bar",}#TestParse/{#TestParse/{"foo":{"$in":[]#TestPrepare#TestPrepareErrors#TestProjectionEval#TestProjectionEval/Parmeters/InvalidParam#TestProjectionEval/InvalidPayload#TestProjectionEval/Star/Expand-invalid#TestProjectionEval/Star/Double#TestProjectionEval/Reference/Expand-double#TestParseProjection#TestParseProjection/fo*#TestParseProjection/foo{bar,baz#TestParseProjection/bar{baz}:foo#TestParseProjection/foo:{bar}#TestParseProjection/foo{}#TestParseProjection/{foo}#TestParseProjection/,foo#TestParseProjection/f_oo#TestParseProjection/foo}#TestParseProjection/foo()#TestParseProjection/foo(bar_baz)#TestParseProjection/foo(bar#TestParseProjection/foo(bar:"baz)#TestParseProjection/foo(bar:0a)#TestParseProjection/foo(bar:@toto)#TestParseProjection/foo,#TestParseProjection/foo{bar,}#TestParseProjection/0(0:#TestParseProjection/0(0:0#TestParseProjection/0{0(0:#TestParseProjection/0{0(0:0#TestParseProjection/o(r:0.0000000000#TestProjectionValidate#TestProjectionValidate/array{foo}#TestProjectionValidate/foo#TestProjectionValidate/simple{child}#TestProjectionValidate/parent{foo}#TestProjectionValidate/simple(foo:1)#TestProjectionValidate/with_params(baz:1)#TestProjectionValidate/with_params(foo:"a_string")#TestProjectionValidate/with_params(foo:3.14)#TestProjectionValidate/with_params(bar:1)#TestProjectionValidate/with_params(foobar:true)#TestProjectionValidate/z:*#TestProjectionValidate/simple{*}#TestProjectionValidate/parent{foo}#01#TestProjectionValidate/*,parent{z:*}#TestProjectionValidate/*,parent{child{*}}#TestProjectionValidate/connection{foo}#TestParseSort#TestParseSort/foo,#TestParseSort/,foo#TestParseSort/,,#TestParseSort/___,___,#TestParseSort/-#TestParseSort/-_#TestSortValidate#TestSortValidate/foo#TestSortValidate/baz#TestParse#TestParse/{"foo":{"$ne":"bar"#TestParse/{"foo":{"$exists":true#TestParse/{"foo":{"$regex":"."#TestParse/[]#TestParse/{"foo":{"$exists":1}}#TestParse/{"foo":{"$exists#TestParse/{foo:"bar"}garbage#TestParse/{foo,"bar"#TestParse/{foo:"bar"#TestParse/{foo:"bar",}#TestParse/{foo:bar}#TestParse/{#TestParse/{"$or":[]}#TestParse/{"$regex":"someregexpression"}#TestParse/{"$elemMatch":"someregexpression"}#TestParse/{"$gt":1}#TestParse/{"$exists":true}#TestParse/{"foo":{"$elemMatch":null}}#TestParse/{"$in":[1,2]}#TestParse/{"foo":{"$elemMatch":"two"}}#TestParse/{"$ne":"bar"}#TestParse/{"foo":{"$regex":"b(?=a)r"}}#TestParse/{"foo":{"$regex":"b[a-z)r"}}#TestParse/{"foo":{"$elemMatch":[{"bar":"one","baz":"two"}]}}#TestParse/{"$and":[{"foo":"bar"}]}#TestParse/{"foo":{"$regex":"b[..?r"}}#TestParse/{"$and":["foo","bar"]}#TestParse/{"$and":"foo"}#TestParse/{"$or":[{"foo":"bar"}]}#TestParse/{"foo":{"$ne":{"bar":baz}}}#TestParse/{"$or":["foo","bar"]}#TestParse/{"$or":[{"foo":"bar"}}#TestParse/{"bar":{"$in":[bar]}}#TestParse/{"bar":{"$in":["bar":"1"]}}#TestParse/{"bar":{"$in":{"bar":"1"}}}#TestParse/{"bar":{"$gt":1ee0}}#TestParse/{"foo":{"$ne":{"bar":"baz"]}}#TestParse/{"foo":{"$ne":{"bar","baz"}}}#TestParse/{"bar":{"$in":"bar"}}#TestParse/{"$or":"foo"}#TestParse/{"foo":nul#TestParse/{"foo":{"$ne":"#TestParse/{"foo":"#TestParse/{"foo":{"$gt":1#TestParse/{"foo":{"$regex":"#TestParse/{"foo":{"$in":[]#TestPrepare#TestPrepareErrors#TestProjectionEval#TestProjectionEval/Parmeters/InvalidParam#TestProjectionEval/InvalidPayload#TestProjectionEval/Star/Expand-invalid#TestProjectionEval/Star/Double#TestProjectionEval/Reference/Expand-double#TestParseProjection#TestParseProjection/fo*#TestParseProjection/foo{bar,baz#TestParseProjection/bar{baz}:foo#TestParseProjection/foo:{bar}#TestParseProjection/foo{}#TestParseProjection/{foo}#TestParseProjection/,foo#TestParseProjection/f_oo#TestParseProjection/foo}#TestParseProjection/foo()#TestParseProjection/foo(bar_baz)#TestParseProjection/foo(bar#TestParseProjection/foo(bar:"baz)#TestParseProjection/foo(bar:0a)#TestParseProjection/foo(bar:@toto)#TestParseProjection/foo,#TestParseProjection/foo{bar,}#TestParseProjection/0(0:#TestParseProjection/0(0:0#TestParseProjection/0{0(0:#TestParseProjection/0{0(0:0#TestParseProjection/o(r:0.0000000000#TestProjectionValidate#TestProjectionValidate/array{foo}#TestProjectionValidate/foo#TestProjectionValidate/simple{child}#TestProjectionValidate/parent{foo}#TestProjectionValidate/simple(foo:1)#TestProjectionValidate/with_params(baz:1)#TestProjectionValidate/with_params(foo:"a_string")#TestProjectionValidate/with_params(foo:3.14)#TestProjectionValidate/with_params(bar:1)#TestProjectionValidate/with_params(foobar:true)#TestProjectionValidate/z:*#TestProjectionValidate/simple{*}#TestProjectionValidate/parent{foo}#01#TestProjectionValidate/*,parent{z:*}#TestProjectionValidate/*,parent{child{*}}#TestProjectionValidate/connection{foo}#TestParseSort#TestParseSort/foo,#TestParseSort/,foo#TestParseSort/,,#TestParseSort/___,___,#TestParseSort/-#TestParseSort/-_#TestSortValidate#TestSortValidate/foo#TestSortValidate/baz#github.com/rs/rest-layer/schema/query,84.31000000000019,,19295
